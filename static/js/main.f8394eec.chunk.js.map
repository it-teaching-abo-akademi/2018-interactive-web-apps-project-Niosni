{"version":3,"sources":["components/stocks.jsx","components/portfolio.jsx","components/portfolios.jsx","App.js","serviceWorker.js","index.js"],"names":["Stocks","react_default","a","createElement","Component","Portfolio","state","stocks","id","name","unitValue","quantity","totalValue","selected","portfolioValue","euros","handleAddStock","portfolio","alert","updatePrices","_this","setState","Object","toConsumableArray","total","forEach","stock","console","log","url","fetch","then","response","json","myJson","time","parseFloat","handleEuros","rate","JSON","stringify","handleRemoveStock","filter","s","selectStock","_this2","this","rows","map","Stock","portfolio_StockRow","key","data","className","type","onClick","props","onRemovePortfolio","components_stocks","onAddStock","onShowGraph","handleShowGraph","onRemoveStock","StockRow","Portfolios","_this$props","onEuros","onDollars","portfolios","onAddPortfolio","components_portfolio","App","currency","newId","handleAddPortfolio","length","concat","handleRemovePortfolio","c","Fragment","components_portfolios","onIncrement","handleIncrement","onDelete","handleDelete","handleDollars","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8394eec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Stocks extends Component {\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default Stocks;\r\n","import React, { Component } from \"react\";\r\nimport Stocks from \"./stocks\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nclass Portfolio extends Component {\r\n  state = {\r\n    stocks: [\r\n      {\r\n        id: 1,\r\n        name: \"NOK\",\r\n        unitValue: 4.72,\r\n        quantity: 100,\r\n        totalValue: 47.2,\r\n        selected: false\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"MSFT\",\r\n        unitValue: 82.78,\r\n        quantity: 5,\r\n        totalValue: 827.8,\r\n        selected: false\r\n      }\r\n    ],\r\n    portfolioValue: 0,\r\n    euros: false\r\n  };\r\n  componentDidMount() {\r\n    //  this.updatePrices();\r\n  }\r\n\r\n  handleAddStock = portfolio => {\r\n    alert(\"joo\");\r\n  };\r\n\r\n  updatePrices = () => {\r\n    this.setState({ euros: false });\r\n    let stocks = [...this.state.stocks];\r\n\r\n    let total = 0;\r\n    let unitValue;\r\n    stocks.forEach(stock => {\r\n      console.log(stock.name);\r\n      let url =\r\n        \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\" +\r\n        stock.name +\r\n        \"&interval=5min&apikey=N5W66DMTP80L3027\";\r\n      fetch(url)\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(myJson => {\r\n          if (myJson[\"Note\"]) {\r\n            alert(\r\n              \"Free API key limit reached! Wait a minute to refresh get updated prices.\"\r\n            );\r\n          } else {\r\n            let time = myJson[\"Meta Data\"][\"3. Last Refreshed\"];\r\n            unitValue = myJson[\"Time Series (5min)\"][time][\"1. open\"];\r\n            stock.unitValue = unitValue;\r\n            stock.totalValue = unitValue * stock.quantity;\r\n            this.setState({ stocks });\r\n\r\n            console.log(stock.unitValue);\r\n            total = parseFloat(total) + parseFloat(stock.totalValue);\r\n            this.setState({ portfolioValue: total });\r\n          }\r\n        });\r\n    });\r\n  };\r\n\r\n  handleEuros = () => {\r\n    if (this.state.euros === true) {\r\n      alert(\"Already euros!\");\r\n    } else {\r\n      this.setState({ euros: true });\r\n      let url =\r\n        \"https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=USD&to_currency=EUR&apikey=N5W66DMTP80L3027\";\r\n      let rate;\r\n      fetch(url)\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(myJson => {\r\n          if (myJson[\"Note\"]) {\r\n            alert(\"exhange error\");\r\n          } else {\r\n            rate = parseFloat(\r\n              myJson[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"]\r\n            );\r\n            console.log(JSON.stringify(myJson));\r\n            console.log(rate);\r\n\r\n            let stocks = [...this.state.stocks];\r\n            let portfolioValue = this.state.portfolioValue;\r\n            portfolioValue = 0;\r\n            stocks.forEach(stock => {\r\n              stock.unitValue = stock.unitValue * rate;\r\n              stock.totalValue = stock.totalValue * rate;\r\n              this.setState({ stocks });\r\n              portfolioValue = portfolioValue + stock.totalValue;\r\n              this.setState({ portfolioValue });\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { stocks } = this.state;\r\n    let rows = stocks.map(Stock => {\r\n      return <StockRow key={Stock.id} data={Stock} />;\r\n    });\r\n\r\n    return (\r\n      <div className=\"container border m-3\">\r\n        <text type=\"text\" onClick=\"\">\r\n          {this.props.portfolio.name}\r\n        </text>\r\n        <button\r\n          onClick={() => this.handleEuros()}\r\n          className=\"btn btn-primary btn-sm m-2\"\r\n        >\r\n          Show in â‚¬\r\n        </button>\r\n        <button\r\n          onClick={() => this.updatePrices()}\r\n          className=\"btn btn-primary btn-sm m-2\"\r\n        >\r\n          Show in $\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onRemovePortfolio(this.props.portfolio)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Remove portfolio\r\n        </button>\r\n        <br />\r\n        {/* <div>\r\n          <ReactTable\r\n            data={stocks}\r\n            columns={[\r\n              {\r\n                Header: \"Name\",\r\n                accessor: \"name\",\r\n                width: 200\r\n              },\r\n              {\r\n                Header: \"Unit value\",\r\n                id: \"unitValue\",\r\n                accessor: d => d.unitValue,\r\n                width: 200\r\n              },\r\n              {\r\n                Header: \"Quantity\",\r\n                accessor: \"quantity\",\r\n                width: 200\r\n              },\r\n              {\r\n                Header: \"Total Value\",\r\n                accessor: \"totalValue\",\r\n                width: 200\r\n              },\r\n              {\r\n                Header: \"Select\",\r\n                accessor: \"select\",\r\n                width: 200\r\n              }\r\n            ]}\r\n            defaultPageSize={5}\r\n            className=\"-striped -highlight\"\r\n          />\r\n          <br />\r\n        </div> */}\r\n        <table className=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Unit Value</td>\r\n              <td>Quantity</td>\r\n              <td>Total Value</td>\r\n              <td>Select</td>\r\n            </tr>\r\n            {rows}\r\n          </tbody>\r\n        </table>\r\n\r\n        <Stocks\r\n          stocks={this.state.stocks}\r\n          onAddStock={this.handleAddStock}\r\n          onShowGraph={this.handleShowGraph}\r\n          onRemoveStock={this.handleRemoveStock}\r\n        />\r\n        <span>\r\n          Total value of {this.props.portfolio.name} :{\" \"}\r\n          {this.state.portfolioValue}\r\n        </span>\r\n        <br />\r\n        <button\r\n          onClick={() => this.handleAddStock(this.props.portfolio)}\r\n          className=\"btn btn-success btn-sm m-2\"\r\n        >\r\n          Add stock\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onShowGraph(this.props.portfolio)}\r\n          className=\"btn btn-info btn-sm m-2\"\r\n        >\r\n          Show graph\r\n        </button>\r\n        <button\r\n          onClick={() => this.handleRemoveStock()}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Remove selected stocks\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleRemoveStock = () => {\r\n    const stocks = this.state.stocks.filter(s => s.selected !== true);\r\n    this.setState({ stocks });\r\n  };\r\n  selectStock = () => {\r\n    console.log(\"ines\");\r\n  };\r\n  getPortfolioName;\r\n}\r\nconst StockRow = props => {\r\n  return (\r\n    <tr>\r\n      <td>{props.data.name}</td>\r\n      <td>{props.data.unitValue}</td>\r\n      <td>{props.data.quantity}</td>\r\n      <td>{props.data.totalValue}</td>\r\n      <td>\r\n        <input type=\"checkbox\" id={props.data.name} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nexport default Portfolio;\r\n","import React, { Component } from \"react\";\r\nimport Portfolio from \"./portfolio\";\r\n\r\nclass Portfolios extends Component {\r\n  render() {\r\n    const {\r\n      onEuros,\r\n      onDollars,\r\n      onRemovePortfolio,\r\n      onAddStock,\r\n      onShowGraph,\r\n      onRemoveStock,\r\n      portfolios,\r\n      onAddPortfolio\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={onAddPortfolio} className=\"btn btn-success btn-sm m-2\">\r\n          Add new portfolio\r\n        </button>\r\n        {portfolios.map(portfolio => (\r\n          <Portfolio\r\n            key={portfolio.id}\r\n            portfolio={portfolio}\r\n            onEuros={onEuros}\r\n            onDollars={onDollars}\r\n            onRemovePortfolio={onRemovePortfolio}\r\n            onAddStock={onAddStock}\r\n            onShowGraph={onShowGraph}\r\n            onRemoveStock={onRemoveStock}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolios;\r\n","import React, { Component } from \"react\";\nimport Portfolios from \"./components/portfolios\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    portfolios: [\n      {\n        id: 1,\n        name: \"Portfolio 1\",\n        currency: \"EUR\"\n      }\n    ],\n    newId: 1\n  };\n  handleAddPortfolio = () => {\n    if (this.state.portfolios.length <= 10) {\n      const newId = this.state.newId + 1;\n      this.setState({ newId });\n      const name = \"Portfolio \" + newId;\n      const portfolios = [...this.state.portfolios, { id: newId, name }];\n      this.setState({ portfolios });\n    } else {\n      alert(\"You can only have 10 portfolios!\");\n    }\n  };\n\n  handleRemovePortfolio = portfolio => {\n    const portfolios = this.state.portfolios.filter(c => c.id !== portfolio.id);\n    this.setState({ portfolios });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <main className=\"container\">\n          <Portfolios\n            portfolios={this.state.portfolios}\n            onAddPortfolio={this.handleAddPortfolio}\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}\n            onEuros={this.handleEuros}\n            onDollars={this.handleDollars}\n            onRemovePortfolio={this.handleRemovePortfolio}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}